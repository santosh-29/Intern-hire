/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internhire;
import java.awt.Dimension;
import java.sql.*;
import javax.swing.*;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Toolkit;

/**
 *
 * @author INDIA
 */
public class SelectedInternsList extends javax.swing.JFrame {

    /**
     * Creates new form ApplicantsList
     */
    public String internshipId;
    public String internName;
    public String internRating;
    public String qualification;
    public  String internId;
    public SelectedInternsList(String internshipId) {
        initComponents();
        this.internshipId = internshipId;
        
        ApplicantListPane.getVerticalScrollBar().setPreferredSize(new Dimension(0,0));
        ApplicantListPane.getVerticalScrollBar().setUnitIncrement(16);
        //setSelectedInternsDetails(internshipId);
        setIconImage();
    }
    
    public void setSelectedInternsDetails(String internshipId)
    {

        getPanelProduct1().removeAll();
        
        try{  
            Class.forName("oracle.jdbc.driver.OracleDriver");  

            Connection con=DriverManager.getConnection(  
            "jdbc:oracle:thin:@localhost:1521:xe","santosh","oracle");  

            
            PreparedStatement pstmt = con.prepareStatement("SELECT INTERNID FROM INTERNSHIP_ENROLLED_INTERNS WHERE internshipid = ? AND applicationstatus=?");
            pstmt.setString(1,internshipId);
            pstmt.setString(2,"SELECTED");
            ResultSet rs = pstmt.executeQuery();
            java.awt.GridBagConstraints gbc = new GridBagConstraints();
            
            gbc.insets = new Insets(4,4,4,4);
            int i = 0;
            int j = 0;
            while(rs.next())
            {
                internId = rs.getString(1);
                gbc.gridx = i%2;
                gbc.gridy = j;
                //getPanelProduct1().add(new ApplicantPanel(internId),gbc);
                getPanelProduct1().add(new SelectedInternPane(internId,internshipId,this),gbc);
                getPanelProduct1().repaint();
                getPanelProduct1().revalidate();
                getApplicantListPane().revalidate();
                if(i%2 == 1)
                    j++;
                i++;
            }
            
        con.close();  
        }
        catch(Exception e){ 
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchBox = new javax.swing.JTextField();
        searchSelectedInterns = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        selectedRating = new javax.swing.JComboBox<>();
        ApplicantListPane = new javax.swing.JScrollPane();
        panelProduct1 = new javax.swing.JPanel();
        applyRatingFilter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(215, 231, 234));

        jPanel1.setBackground(new java.awt.Color(202, 223, 227));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(49, 87, 94));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Selected Interns List");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        searchBox.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        searchBox.setForeground(new java.awt.Color(49, 87, 94));
        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        searchSelectedInterns.setBackground(new java.awt.Color(244, 139, 1));
        searchSelectedInterns.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        searchSelectedInterns.setForeground(new java.awt.Color(255, 255, 255));
        searchSelectedInterns.setText("Search");
        searchSelectedInterns.setBorder(null);
        searchSelectedInterns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSelectedInternsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(49, 87, 94));
        jLabel3.setText("Sort By  :");

        selectedRating.setBackground(new java.awt.Color(240, 240, 240));
        selectedRating.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        selectedRating.setForeground(new java.awt.Color(49, 87, 94));
        selectedRating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "InternRating (Low to High)", "InternRating (High to Low)" }));
        selectedRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedRatingActionPerformed(evt);
            }
        });

        ApplicantListPane.setBorder(null);
        ApplicantListPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelProduct1.setBackground(new java.awt.Color(202, 223, 227));
        panelProduct1.setLayout(new java.awt.GridBagLayout());
        ApplicantListPane.setViewportView(panelProduct1);

        applyRatingFilter.setBackground(new java.awt.Color(244, 139, 1));
        applyRatingFilter.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        applyRatingFilter.setForeground(new java.awt.Color(255, 255, 255));
        applyRatingFilter.setText("Apply Filter");
        applyRatingFilter.setBorder(null);
        applyRatingFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyRatingFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ApplicantListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(124, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchSelectedInterns, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedRating, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(applyRatingFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchSelectedInterns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchBox)
                    .addComponent(applyRatingFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectedRating, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ApplicantListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void searchSelectedInternsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSelectedInternsActionPerformed
        // TODO add your handling code here:
        getPanelProduct1().removeAll();
        String search = searchBox.getText();
        
        String userId;
        try{  
            Class.forName("oracle.jdbc.driver.OracleDriver");  

            Connection con=DriverManager.getConnection(  
            "jdbc:oracle:thin:@localhost:1521:xe","santosh","oracle");  

            
            PreparedStatement pstmt = con.prepareStatement("SELECT INTERNID FROM INTERNSHIP_ENROLLED_INTERNS WHERE internshipid = ? AND applicationstatus=?");
            pstmt.setString(1,internshipId);
            pstmt.setString(2,"SELECTED");
            ResultSet rs = pstmt.executeQuery();
            java.awt.GridBagConstraints gbc = new GridBagConstraints();
            
            gbc.insets = new Insets(4,4,4,4);
            int i = 0;
            int j = 0;
            while(rs.next())
            {
                internId = rs.getString(1);
                PreparedStatement pstmt1 = con.prepareStatement("SELECT * FROM INTERN_DETAILS WHERE USERNAME=? AND (NAME LIKE ? OR INTERNRATING LIKE ? OR QUALIFICATION LIKE ?)");
                pstmt1.setString(1,internId);
                pstmt1.setString(2,"%"+search+"%");
                pstmt1.setString(3,"%"+search+"%");
                pstmt1.setString(4,"%"+search+"%");
                ResultSet rs1 = pstmt1.executeQuery();
                while(rs1.next())
                {
                    String applicantId = rs1.getString(1);
                    gbc.gridx = i%2;
                    gbc.gridy = j;
                    getPanelProduct1().add(new SelectedInternPane(applicantId,internshipId,this),gbc);
                    getPanelProduct1().repaint();
                    getPanelProduct1().revalidate();
                    getApplicantListPane().revalidate();
                    if(i%2 == 1)
                        j++;
                    i++;
                }
                
                pstmt1 = con.prepareStatement("SELECT INTERNID FROM INTERN_SKILLS WHERE INTERNID=? AND (SKILLS LIKE ?)");
                pstmt1.setString(1,internId);
                pstmt1.setString(2,search);
//                pstmt1.setString(2,"%"+search+"%");
                rs1 = pstmt1.executeQuery();
                while(rs1.next())
                {
                    String applicantId = rs1.getString(1);
                    gbc.gridx = i%2;
                    gbc.gridy = j;
                    getPanelProduct1().add(new SelectedInternPane(applicantId,internshipId,this),gbc);
                    getPanelProduct1().repaint();
                    getPanelProduct1().revalidate();
                    getApplicantListPane().revalidate();
                    if(i%2 == 1)
                        j++;
                    i++;
                }
            }
            
            if(i==0)
            {
                getPanelProduct1().removeAll(); 
                getPanelProduct1().add(new NoResultsFoundPanel());
                getPanelProduct1().repaint();
                getPanelProduct1().revalidate();
                getApplicantListPane().revalidate();
            }
        con.close();
        }
        catch(Exception e){ 
            System.out.println(e);
        }
        
    }//GEN-LAST:event_searchSelectedInternsActionPerformed

    private void applyRatingFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyRatingFilterActionPerformed
        // TODO add your handling code here:
        getPanelProduct1().removeAll();
        String selRating = selectedRating.getItemAt(selectedRating.getSelectedIndex());
        String userId;
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");  
            Connection con=DriverManager.getConnection(  
            "jdbc:oracle:thin:@localhost:1521:xe","santosh","oracle");  
            PreparedStatement pstmt;// = con.prepareStatement("SELECT * FROM INTERN_DETAILS WHERE USERNAME IN (SELECT INTERNID FROM INTERNSHIP_ENROLLED_INTERNS WHERE internshipid = ? AND applicationstatus=?) ORDER BY INTERNRATING ASC");
            if(selRating.equals("InternRating (Low to High)"))
            {
                pstmt = con.prepareStatement("SELECT * FROM INTERN_DETAILS WHERE USERNAME IN (SELECT INTERNID FROM INTERNSHIP_ENROLLED_INTERNS WHERE internshipid = ? AND applicationstatus=?) ORDER BY INTERNRATING ASC");
                
            }
            else if(selRating.equals("InternRating (High to Low)"))
            {
                pstmt = con.prepareStatement("SELECT * FROM INTERN_DETAILS WHERE USERNAME IN (SELECT INTERNID FROM INTERNSHIP_ENROLLED_INTERNS WHERE internshipid = ? AND applicationstatus=?) ORDER BY INTERNRATING DESC");
            }
            else{
                pstmt = con.prepareStatement("SELECT INTERNID FROM INTERNSHIP_ENROLLED_INTERNS WHERE internshipid = ? AND applicationstatus=?");
            }
            
            pstmt.setString(1,internshipId);
            pstmt.setString(2,"SELECTED");
            ResultSet rs = pstmt.executeQuery();
            java.awt.GridBagConstraints gbc = new GridBagConstraints();
            
            gbc.insets = new Insets(4,4,4,4);
            int i = 0;
            int j = 0;
            while(rs.next())
            {
                userId = rs.getString(1);
                gbc.gridx = i%2;
                gbc.gridy = j;
                //getPanelProduct1().add(new ApplicantPanel(internId),gbc);
                getPanelProduct1().add(new SelectedInternPane(userId,internshipId,this),gbc);
                getPanelProduct1().repaint();
                getPanelProduct1().revalidate();
                getApplicantListPane().revalidate();
                if(i%2 == 1)
                    j++;
                i++;
            }
            if(i==0)
            {
                getPanelProduct1().removeAll();
                getPanelProduct1().add(new NoResultsFoundPanel());
                getPanelProduct1().repaint();
                getPanelProduct1().revalidate();
                getApplicantListPane().revalidate();
            }
        con.close();
        }
        catch(Exception e){ 
            System.out.println(e);
        }
        
        
        
    }//GEN-LAST:event_applyRatingFilterActionPerformed

    private void selectedRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedRatingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectedRatingActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectedInternsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectedInternsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectedInternsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectedInternsList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ApplicantsList().setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ApplicantsList().setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ApplicantsList().setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ApplicantsList().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ApplicantListPane;
    private javax.swing.JButton applyRatingFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelProduct1;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchSelectedInterns;
    private javax.swing.JComboBox<String> selectedRating;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the panelProduct1
     */
    public javax.swing.JPanel getPanelProduct1() {
        return panelProduct1;
    }

    /**
     * @param panelProduct1 the panelProduct1 to set
     */
    public void setPanelProduct1(javax.swing.JPanel panelProduct1) {
        this.panelProduct1 = panelProduct1;
    }

    /**
     * @return the ApplicantListPane
     */
    public javax.swing.JScrollPane getApplicantListPane() {
        return ApplicantListPane;
    }

    /**
     * @param ApplicantListPane the ApplicantListPane to set
     */
    public void setApplicantListPane(javax.swing.JScrollPane ApplicantListPane) {
        this.ApplicantListPane = ApplicantListPane;
    }

    private void setIconImage() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logoIcon.PNG")));
    }

}
